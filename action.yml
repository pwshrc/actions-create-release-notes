
name: "Invoke Library-Dependent PowerShell"
description: "Invokes the given PowerShell command after first restoring nested dependencies."
inputs:
  mode:
    description: "One of 'upload' or 'download'."
    required: true
  releasenotesfile-name:
    description: "The name of the file which will contain the release notes."
    required: true
    default: 'release-notes.md'
  releasenotesfile-artifact-name:
    description: "The name of the artifact which will contain the release notes."
    required: true
    default: 'release-notes.md'
  versionfile-name:
    description: "The name of the JSON file containing the generated version information."
    required: true
    default: 'version.json'
  versionfile-path:
    description: "The path of the directory containing the JSON file of the generated version information."
    required: true
    default: './'
  versionfile-artifact-name:
    description: "The name of the artifact which contains the JSON file of the generated version information."
    required: true
    default: 'version.json'
outputs:
  releasenotes:
    description: "The content of the release notes."
    value: ${{ steps.releasenotes_var.outputs.releasenotes }}
  releasenotes-filepath:
    description: "The path to the file containing the release notes."
    value: ${{ steps.calculate_releasenotesfile_filepath.outputs.filePath }}
runs:
  using: "composite"
  steps:
  - name: Check out repository full history
    if: inputs.mode == 'upload'
    uses: actions/checkout@v3
    with:
      fetch-depth: 0  # create-release-notes requires the full history to create the release notes.
  - name: Populate GitVersion variables
    if: inputs.mode == 'upload'
    id: gitversion_vars
    uses: pwshrc/actions-determine-version@v0.4.0
    with:
      mode: 'download'
      versionfile-name: ${{ inputs.versionfile-name }}
      versionfile-path: ${{ inputs.versionfile-path }}
      versionfile-artifact-name: ${{ inputs.versionfile-artifact-name }}
  - name: Calculate file path
    id: calculate_releasenotesfile_filepath
    shell: pwsh
    env:
      filename: ${{ inputs.releasenotesfile-name }}
      directory: ${{ inputs.releasenotesfile-path }}
    run: |
      [string] $filePath = Join-Path $Env:filename $Env:directory
      echo "::set-output name=filePath::$filePath"
  - name: Create release notes
    if: inputs.mode == 'upload'
    id: create_release_notes
    uses: mikepenz/release-changelog-builder-action@v4
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    with:
      fromTag: ${{ steps.gitversion_vars.outputs.VersionSourceSha }}
      toTag: ${{ steps.gitversion_vars.outputs.Sha }}
      commitMode: true
      outputFile: ${{ steps.calculate_releasenotesfile_filepath.outputs.filePath }}
  - name: "Create artifact: ${{ inputs.releasenotesfile-artifact-name }}"
    if: inputs.mode == 'upload'
    uses: actions/upload-artifact@v3
    with:
      name: ${{ inputs.releasenotesfile-artifact-name }}
      path: ${{ inputs.releasenotesfile-path] }}
      if-no-files-found: error
  - name: "Get artifact: ${{ inputs.releasenotesfile-artifact-name }}"
    if: inputs.mode == 'download'
    uses: actions/download-artifact@v3
    with:
      name: ${{ inputs.releasenotesfile-artifact-name }}
      path: ${{ inputs.releasenotesfile-path }}
  - name: "Populate releasenotes variable"
    id: releasenotes_var
    shell: pwsh
    env:
      filePath: ${{ steps.calculate_releasenotesfile_filepath.outputs.filePath }}
    run: |
